package test;
public class TestDemo1 {
    static String SSL_EMAIL = "javax.net.ssl.SSLSocketFactory";

　　　//需要传的值都在main方法调用的sendmail里传！
    public static void main(String[] args) {
         String s = sendmail(username, pass, from, to, subject, content);
         System.out.println(s);
    }
    /**
     * 
     * @param username 发件人邮件的用户名
     * @param pass 发件人邮件的密码（此密码一定要是授权码   授权码：在发件人邮箱内开启smtp/pop3协议所获得的授权码）
     * @param from 发件人邮箱
     * @param to   收件人邮箱
     * @param subject 邮件标题
     * @param content 邮件内容
     * @return
     */
    public static String sendmail(final String username, final String pass,
            String from, String to, String subject, String content) {
        //Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
        //设置系统参数
        Properties props = System.getProperties();
        props.setProperty("mail.smtp.socketFactory.class", SSL_EMAIL);
        props.setProperty("mail.smtp.socketFactory.fallback", "true");
        props.setProperty("mail.store.protocol", "smtp");
        props.setProperty("mail.smtp.host", "smtp.qq.com");
        //props.setProperty("mail.smtp.port", "465");
        props.setProperty("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.auth", "true");
        //创建邮件会话
        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, pass);
            }
        });
        //创建邮件信息
        Message msg = new MimeMessage(session);
        try {
            msg.setFrom(new InternetAddress(username));
            msg.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(to, false));
            msg.setSubject(subject);
            msg.setText(content);
            msg.setSentDate(new Date());
            Transport.send(msg);
            return "1";
        } catch (MessagingException e) {
            return e.getMessage();
        }
    }
}